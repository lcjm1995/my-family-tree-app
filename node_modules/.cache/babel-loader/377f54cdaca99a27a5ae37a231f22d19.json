{"ast":null,"code":"var _jsxFileName = \"/home/lauren/Personal/DDC Mentoring/practice_project/family-tree-app/src/components/pages/allAncestors.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, FormGroup, Input } from \"reactstrap\";\nimport \"../compStyle.css\";\n// import { db } from \"../../services/firebase\";\nconst ancestor = [{\n  name: \"Angela Doe\",\n  yearOfBirth: 1928,\n  dead: true,\n  job: \"Nurse\",\n  married: true,\n  children: 0\n}, {\n  name: \"Jarret Doe\",\n  yearOfBirth: 1901,\n  dead: true,\n  job: \"Engineer\",\n  married: true,\n  children: 2\n}, {\n  name: \"Albert Smith\",\n  yearOfBirth: 1856,\n  dead: true,\n  job: \"Glass Blower\",\n  married: false,\n  children: 0\n}, {\n  name: \"Reginald Doe\",\n  yearOfBirth: 1964,\n  dead: false,\n  job: \"Writer\",\n  married: true,\n  children: 6\n}, {\n  name: \"Tina Fake\",\n  yearOfBirth: 1905,\n  dead: true,\n  job: \"Midwife\",\n  married: false,\n  children: 4\n}];\nexport default function AllAncestorsPage() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]); // const [ancestor, setAncestor] = useState<AncestorTest[]>([]);\n  // useEffect(() => {\n  //   const ancestor = db\n  //     .collection(\"users\")\n  //     .get()\n  //     .then((snapshot) => {\n  //       const returnedAncestors: AncestorTest[] = [];\n  //       snapshot.forEach((snap) => {\n  //         //@ts-ignore\n  //         returnedUsers.push(snap.data());\n  //       });\n  //       setAncestor(returnedAncestors);\n  //     });\n  // });\n\n  useEffect(() => {\n    const results = ancestor.filter(ancestor => ancestor.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    setSearchResults(results);\n  }, [searchTerm]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \" All Ancestors page\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"searchbar-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Search\",\n    value: searchTerm,\n    onChange: event => setSearchTerm(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, searchResults.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, item.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \" Year Of Birth:\", item.yearOfBirth, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"Job: \", item.job), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Children:\", item.children ? item.children : \"no\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"Married: \", item.married ? \"yes\" : \"no\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Dead: \", item.dead ? \"yes\" : \"no\")))))))));\n}","map":{"version":3,"sources":["/home/lauren/Personal/DDC Mentoring/practice_project/family-tree-app/src/components/pages/allAncestors.tsx"],"names":["React","useEffect","useState","Form","FormGroup","Input","ancestor","name","yearOfBirth","dead","job","married","children","AllAncestorsPage","searchTerm","setSearchTerm","searchResults","setSearchResults","results","filter","toLowerCase","includes","event","target","value","map","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, FormGroup, Label, Input } from \"reactstrap\";\nimport axios from \"axios\";\n\nimport \"../compStyle.css\";\nimport { AncestorTest, AncestorDetails } from \"../../types\";\n\n// import { db } from \"../../services/firebase\";\n\nconst ancestor = [\n  {\n    name: \"Angela Doe\",\n    yearOfBirth: 1928,\n    dead: true,\n    job: \"Nurse\",\n    married: true,\n    children: 0,\n  },\n  {\n    name: \"Jarret Doe\",\n    yearOfBirth: 1901,\n    dead: true,\n    job: \"Engineer\",\n    married: true,\n    children: 2,\n  },\n  {\n    name: \"Albert Smith\",\n    yearOfBirth: 1856,\n    dead: true,\n    job: \"Glass Blower\",\n    married: false,\n    children: 0,\n  },\n  {\n    name: \"Reginald Doe\",\n    yearOfBirth: 1964,\n    dead: false,\n    job: \"Writer\",\n    married: true,\n    children: 6,\n  },\n  {\n    name: \"Tina Fake\",\n    yearOfBirth: 1905,\n    dead: true,\n    job: \"Midwife\",\n    married: false,\n    children: 4,\n  },\n];\n\nexport default function AllAncestorsPage() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState<AncestorDetails[]>([]);\n  // const [ancestor, setAncestor] = useState<AncestorTest[]>([]);\n  // useEffect(() => {\n  //   const ancestor = db\n  //     .collection(\"users\")\n  //     .get()\n  //     .then((snapshot) => {\n  //       const returnedAncestors: AncestorTest[] = [];\n  //       snapshot.forEach((snap) => {\n  //         //@ts-ignore\n  //         returnedUsers.push(snap.data());\n  //       });\n  //       setAncestor(returnedAncestors);\n  //     });\n  // });\n\n  useEffect(() => {\n    const results = ancestor.filter((ancestor) =>\n      ancestor.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setSearchResults(results);\n  }, [searchTerm]);\n\n  return (\n    <div>\n      <h2> All Ancestors page</h2>\n      <div className=\"content-body\">\n        <div className=\"search-body\">\n          <Form className=\"searchbar-form\">\n            <FormGroup>\n              <Input\n                type=\"text\"\n                placeholder=\"Search\"\n                value={searchTerm}\n                onChange={(event) => setSearchTerm(event.target.value)}\n              />\n              <div className=\"search-results\">\n                {searchResults.map((item) => (\n                  <div>\n                    <h2>{item.name}</h2>\n                    <p> Year Of Birth:{item.yearOfBirth} </p>\n                    <p>Job: {item.job}</p>\n                    <p>Children:{item.children ? item.children : \"no\"}</p>\n                    <p>Married: {item.married ? \"yes\" : \"no\"}</p>\n                    <p>Dead: {item.dead ? \"yes\" : \"no\"}</p>\n                  </div>\n                ))}\n              </div>\n            </FormGroup>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}